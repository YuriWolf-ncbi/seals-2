#!/usr/bin/perl5.16

############################################################
#	Template:	1.1, August 17, 2015
#	Parent Path:	/home/wolf/bin on frosty
############################################################

############################################################
#	System etc
############################################################
use lib "/home/wolf/perl5/lib/perl5";
use YIW::basic;

our $Pver = "0.1";
our $Pdat = "Xxx 00 2016";

our ($Pnam) = ($0 =~ m/([^\/]+)$/);
our ($Path) = ($0 =~ m/^(.+)\/[^\/]+$/);$Path = "." unless($Path);

our $Ppid = $$;	# Process ID
our $Base = "tmp.$Pnam.$Ppid";
our $CMD = "";
############################################################
#	Definitions
############################################################
$icom = 0;
$ldelim = "\t";
$k1 = 1;
$k2 = 2;
$smod = 0;

############################################################
#	Global variables
############################################################
%key2l;
%key2v;

############################################################
#	Instructions etc
############################################################
$Instructions = <<EOINPUT;

$Path/$Pnam $Pver, $Pdat

Use: $Pnam name [options]

Options:

	-k1=n		n-th field as the key (default $k1)

	-k2=n		n-th field as the value (default $k2)

	-s=\"delim\"	delimiters to split line (default \"\\t\")

	-m=n		selection mode (default 1st instance)
			1 - min
			2 - max

	-comm=n		lines starting with \"\#\" (default - pass through)
			1 - skip
			2 - treat as normal
EOINPUT

############################################################
#	code start
############################################################

#---	get and process arguments --------------------------
YIW::basic::my_args(\@ARGV,1);					# pass 0 to block STDIN
!@myGlobList and print $Instructions and exit 0;

# examples for using options:
# $opts = 1 if(exists $myOptList{"q"});				# on/off
# $opti = int $myOptList{"i"} if(int $myOptList{"i"}>0);	# positive integer
# $opti = $myOptList{"x"} + 0 if($myOptList{"x"}>0);		# positive real
# $optl = $myOptList{"l"} if($myOptList{"l"} ne "");		# non-empty string
$icom = int $myOptList{"comm"} if(int $myOptList{"comm"}>0);
$smod = int $myOptList{"m"} if(int $myOptList{"m"}>0);
$ldelim = $myOptList{"s"} if($myOptList{"s"} ne "");
$k1 = int $myOptList{"k1"} if(int $myOptList{"k1"}>0);
$k2 = int $myOptList{"k2"} if(int $myOptList{"k2"}>0);

$k2 = $k1 if($smod==0);						# value = key

# my $name = shift @myGlobList;

#---	rest of the code -----------------------------------
# $CMD = ""; print STDERR "$Pnam:\t[ $CMD ]\n"; system $CMD;
#
# print STDERR "$Pnam:\tReading $dlst/$core.$clst\n";
# open HAND,"<$dlst/$core.$clst" or die "$Pnam:\tCan't read \"$dlst/$core.$clst\"";
# while(<HAND>){
#  chomp;
# }
# close HAND;
# printf STDERR "$Pnam:\t\t%s\tgenomes\n",int_commify(scalar @glist);

#---	read the data --------------------------------------
foreach my $fnam (@myGlobList){
 print STDERR "$Pnam:\tReading $fnam\n";
 open HAND,"<$fnam" or die "Can't read \"$fnam\"";
 while(<HAND>){
  chomp;
  if(m/^\#/){ print "$_\n" if($icom==0); next if($icom<2);}
  my @data = split/$ldelim/;
  my $xkey = $data[$k1-1];
  my $xval = $data[$k2-1];
  unless(exists $key2v{$xkey}){					# 1st instance, always store
   $key2v{$xkey} = $xval;
   $key2l{$xkey} = $_;
   next;
  }
  if(($smod>=2 and $xval>$key2v{$xkey}) or ($smod==1 and $xval<$key2v{$xkey})){
   $key2v{$xkey} = $xval;
   $key2l{$xkey} = $_;
  }
 }
 close HAND;
}
printf STDERR "$Pnam:\t\t%s\tbest lines\n",int_commify(scalar keys %key2l);

#---	output ---------------------------------------------
foreach my $xkey (keys %key2l){
 printf "%s\n",$key2l{$xkey};
}

############################################################
#	template_function($xxxx)
############################################################
#sub template_function
#{
# my $xxxx = shift;
#}
