#!/usr/bin/perl5.16

############################################################
#	Template:	0.2, May 02 2002
#	Parent Path:	/net/gloin/export/home/wolf/bin/???
############################################################

############################################################
#	System etc
############################################################
$Pver = "0.2";
$Pdat = "October 22 2004";

($Pnam) = ($0 =~ m/([^\/]+)$/);
($Path) = ($0 =~ m/^(.+)\/[^\/]+$/);$Path = "." unless($Path);

############################################################
#	Definitions
############################################################
$idwrd = 2;
$delim = "[ ,;:|]";
$lbar = 0x7fffffff;
$lcut = 0;

############################################################
#	Global variables
############################################################

############################################################
#	Instructions etc
############################################################
$Instructions = <<EOINPUT;

$Path/$Pnam $Pver, $Pdat

Use: $Pnam name [options]

Searches for regexp pattern in sequence.

Options:

	-p=pattern	search for PERL regexp (case insensitive)

	-w=n		use n-th word of ID (default $idwrd; 0 - all)

	-bar=n		upper seq len limit (default $lbar)

	-cut=n		lower seq len limit (default $lcut)
EOINPUT

############################################################
#	code start
############################################################

#---	get and process arguments --------------------------
my_args(@ARGV);
-t STDIN and !@myGlobList and print $Instructions and exit 0;
push @myGlobList,"-" unless(-t STDIN);

$dpatt = $myOptList{"p"} if(exists $myOptList{"p"});
$idwrd = $myOptList{"w"} if(exists $myOptList{"w"});
$lcut = $myOptList{"cut"} if($myOptList{"cut"}>0);
$lbar = $myOptList{"bar"} if($myOptList{"bar"}>0);

foreach my $name (@myGlobList){
 my $savedel = $/;
 $/="\n>";
 open HAND,"<$name" or die "Can't read \"$name\"";
 while(<HAND>){
  chomp;
  my ($def,@rest)=split /\n+/;
  $def =~ s/^>*//;
  my $seq = join "",@rest;
  $seq =~ tr/ \t//d;
  my ($id) = split/ +/,$def;
  $id = (split/$delim/,$id)[$idwrd-1] if($idwrd>0);
  my $l = length $seq;
  next if($l>$lbar or $l<$lcut);
  while($seq=~m/($dpatt)/g){
   my $mstr = $&;
   my $mpos = length $`;
   printf "%s\t%d\t%s\n",$id,$mpos+1,$mstr;
  }
 }
 close HAND;
 $/=$savedel;
}

############################################################
#	max min
############################################################
sub max
{
 my $max = shift;
 while(@_){
  my $x = shift;
  $max = $x if($x>$max);
 }
 return $max;
}

sub min
{
 my $min = shift;
 while(@_){
  my $x = shift;
  $min = $x if($x<$min);
 }
 return $min;
}


############################################################
#	my_args
############################################################
sub my_args
{
 my $nop = scalar @_;
 for($i=0;$i<$nop;$i++){
  if($_[$i]=~m/^-[^=]+=$/){
   my $new = $_[$i].$_[$i+1];
   splice @_,$i,2,$new;
  }
 }
 foreach my $arg (@_){
  my ($opt) = ($arg =~ m/^-(\w+)/);
  my ($val) = ($arg =~ m/^-\w+=(.*)/);
  if($opt){
   $myOptList{$opt} = $val;
  }else{
   push @myGlobList,$arg;
  }
 }
}
